@model PVIMS.Web.Models.AppointmentEditModel
@{
    ViewBag.Title = "Edit Appointment";
}
@{
    Layout = "~/Views/Shared/_StandardLayout.cshtml";

    ViewBag.Icon = "fa-calendar";
    ViewBag.Heading = string.Format("Edit Appointment ({0})", ViewBag.PatientName);
    ViewBag.ClinicalColour = "orange"; ViewBag.AnalyticalColour = "white"; ViewBag.ReportingColour = "white"; ViewBag.PublisherColour = "white"; ViewBag.AdminColour = "white";
}
@section breadcrumb
{
    <li>Appointments</li>
}
<!-- widget grid -->
<section id="widget-grid" class="">
    <!-- row -->
    <div class="row">
        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false" data-widget-colorbutton="false">
                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Edit Appointment</h2>
                </header>
                <!-- widget div-->
                <div>

                    <!-- widget content -->
                    <div class="widget-body no-padding">

                        @using (Html.BeginForm("EditAppointment", "Appointment", FormMethod.Post, new { @class = "smart-form" }))
                        {
                            @Html.AntiForgeryToken()

                            <header>
                                Basic Details
                            </header>

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.AppointmentId)

                            <fieldset>

                                <section>
                                    <label class="fa fa-asterisk text-danger" style="padding-right:3px; font-size:75%; line-height:29px;"></label>@Html.LabelFor(model => model.AppointmentDate)
                                    <label class="input">
                                        @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "yyyy-mm-dd", @type = "text" } })
                                    </label>
                                    @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                                </section>

                                <section>
                                    <label class="fa fa-asterisk text-danger" style="padding-right:3px; font-size:75%; line-height:29px;"></label>@Html.LabelFor(model => model.Reason)
                                    <label class="textarea">
                                        @Html.TextAreaFor(model => model.Reason, new { htmlAttributes = new { @class = "custom-scroll", @rows = "6" } })
                                    </label>
                                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                                </section>

                            </fieldset>

                            <header>
                                Cancellation
                            </header>

                            <fieldset>

                                <section>
                                    @Html.LabelFor(model => model.Cancelled, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.DropDownListFor(model => model.Cancelled, (IEnumerable<SelectListItem>)ViewBag.Cancellations, new { @class = "form-control" })
                                    </label>
                                    @Html.ValidationMessageFor(model => model.Cancelled, "", new { @class = "text-danger" })
                                </section>

                                <section>
                                    @Html.LabelFor(model => model.CancellationReason)
                                    <label class="textarea">
                                        @Html.TextAreaFor(model => model.CancellationReason, new { htmlAttributes = new { @class = "custom-scroll", @rows = "6" } })
                                    </label>
                                    @Html.ValidationMessageFor(model => model.CancellationReason, "", new { @class = "text-danger" })
                                </section>

                            </fieldset>

                            <header>
                                Audit
                            </header>

                            <fieldset>

                                <section>
                                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(model => model.Created, new { @readonly = "readonly", @style = "background-color: #EBEBE4;" })
                                    </label>
                                </section>

                                <section>
                                    @Html.LabelFor(model => model.Updated)
                                    <label class="input">
                                        @Html.TextBoxFor(model => model.Updated, new { @readonly = "readonly", @style = "background-color: #EBEBE4;" })
                                    </label>
                                </section>

                            </fieldset>

                            <footer>
                                <button type="submit" class="btn btn-primary" value="Submit" name="button">
                                    Submit
                                </button>
                                <a href="@ViewBag.CancelRedirectUrl" class="btn btn-default">Back</a>
                            </footer>

                        }
                    </div>
                    <!-- end widget content -->

                </div>
                <!-- end widget div -->
            </div>

            <!-- end widget -->
        </article>
        <!-- WIDGET END -->
    </div>
    <!-- end row -->
    <!-- end row -->
</section>
<!-- end widget grid -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
