@model PVIMS.Web.Models.AddUserModel

@{
    ViewBag.Title = "Add New User";
}
@{
	Layout = "~/Views/Shared/_StandardLayout.cshtml";

	ViewBag.Icon = "fa-user";
	ViewBag.Heading = "Add a new user";
    ViewBag.ClinicalCol = "orange"; ViewBag.AnalyticalCol = "white"; ViewBag.ReportingCol = "white"; ViewBag.PublisherCol = "white";
}

@section breadcrumb
{
	<li>Administration</li>
	<li>@Html.ActionLink("Users", "Index", "UserAdministration")</li>
}


    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- row -->
        <div class="row">

            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-6">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false" data-widget-colorbutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Add New User</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body padding">

                            @using (Html.BeginForm("AddUser", "UserAdministration", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary("", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                        <div class="note">
                                            Ensure email address is valid and does not have invalid characters, including spaces before and after the email address
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.UserName, new { @maxlength = "30", @class = "form-control" })
                                        <div class="note">
                                            Username has <strong>Maxlength</strong> of 30 characters....
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SelectedRoles, new { @class = "control-label col-md-2" })
                                    <div class="col-sm-10">
                                        @Html.ListBoxFor(model => model.SelectedRoles, (List<SelectListItem>)ViewBag.Roles, new { @class = "form-control", @style = "height: 200px" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SelectedFacilities, new { @class = "control-label col-md-2" })
                                    <div class="col-sm-10">
                                        @Html.ListBoxFor(model => model.SelectedFacilities, (List<SelectListItem>)ViewBag.Facilities, new { @class = "form-control", @style = "height: 200px" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" class="btn btn-primary btn-sm" value="Save" />
                                        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default btn-sm" })
                                    </div>
                                </div>
                            }

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->

        </div>

        <!-- end row -->

    </section>
    <!-- end widget grid -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
